# Local Variables:
# org-ref-default-bibliography: code.bib
# End:

#+TITLE:         Day 1. 100 days of code
#+AUTHOR:        Sergio-Feliciano Mendoza-Barrera
#+DRAWERS:       sfmb
#+EMAIL:         s.f.m@ieee.org
#+DATE:          \today
#+DESCRIPTION:   More julia exercises
#+KEYWORDS:      R, data science, research, methodology, julia
#+LANGUAGE:      en
#+OPTIONS:       H:10 num:t toc:nil \n:nil @:t ::t |:t ^:{} -:t f:t *:t <:t d:HIDDEN
#+OPTIONS:       TeX:t LaTeX:t skip:nil d:nil todo:t pri:nil tags:not-in-toc
#+OPTIONS:       LaTeX:dvipng
#+INFOJS_OPT:    view:nil toc:nil ltoc:t mouse:underline buttons:0 path:http://orgmode.org/org-info.js
#+EXPORT_SELECT_TAGS: export
#+EXPORT_EXCLUDE_TAGS: noexport
#+LINK_UP:
#+LINK_HOME:
#+XSLT:
#+STYLE: <link rel="stylesheet" type="text/css" href="dft.css"/>

#+LATEX_CLASS:  tufte-handout
#+LATEX_CLASS_OPTIONS: [letterpaper, 10pt, colorlinks=false, citecolor=., linkcolor=black, urlcolor=black]
#+LATEX_HEADER: \usepackage{AdobeCaslonPro}
#+LATEX_HEADER: \let\oldstylenums\textosf
#+LATEX_HEADER: \usepackage[ttdefault=true]{AnonymousPro}

#+LATEX_HEADER: \usepackage{booktabs} % book-quality tables
#+LATEX_HEADER: \usepackage{units}    % non-stacked fractions and better unit spacing
#+LATEX_HEADER: \usepackage{multicol} % multiple column layout facilities
#+LATEX_HEADER: \usepackage{lipsum}   % filler text
#+LATEX_HEADER: \usepackage{fancyvrb} % extended verbatim environments
#+LATEX_HEADER: \fvset{fontsize=\normalsize}% default font size for fancy-verbatim environments

#+LATEX_HEADER: \newcommand{\doccmd}[1]{\texttt{\textbackslash#1}}% command name -- adds backslash automatically
#+LATEX_HEADER: \newcommand{\docopt}[1]{\ensuremath{\langle}\textrm{\textit{#1}}\ensuremath{\rangle}}% optional command argument
#+LATEX_HEADER: \newcommand{\docarg}[1]{\textrm{\textit{#1}}}% (required) command argument
#+LATEX_HEADER: \newcommand{\docenv}[1]{\textsf{#1}}% environment name
#+LATEX_HEADER: \newcommand{\docpkg}[1]{\texttt{#1}}% package name
#+LATEX_HEADER: \newcommand{\doccls}[1]{\texttt{#1}}% document class name
#+LATEX_HEADER: \newcommand{\docclsopt}[1]{\texttt{#1}}% document class option name
#+LATEX_HEADER: \newenvironment{docspec}{\begin{quote}\noindent}{\end{quote}}% command specification environment

#+LATEX_HEADER: \usepackage{babel}
#+LATEX_HEADER: \usepackage[fixlanguage]{babelbib}
#+LATEX_HEADER: \selectbiblanguage{english}
#+LATEX_HEADER: \usepackage[sort,round]{natbib}
#+LATEX_HEADER: \usepackage[nottoc]{tocbibind}
#+LATEX_HEADER: \usepackage{csquotes}
#+STARTUP: entitiespretty
#+LATEX_HEADER: \markboth{Exercism training in Julia}
#+LATEX_HEADER: {Sergio-Feliciano Mendoza-Barrera}
#+LATEX_HEADER: \newcommand{\degC}{$^\circ$C{}}
#+LATEX_HEADER: \usepackage{fancyhdr} \pagestyle{fancyplain} \fancyhf{} \renewcommand{\headrulewidth}{0pt} \lhead{\scriptsize{SERGIO-FELICIANO MENDOZA-BARRERA}} \rhead{\scriptsize{PERSONAL RESEARCH $\cdot\quad 2020 \quad\cdot$ GLOBAL LABS $\cdot$ MEXICO}}\fancyfoot[RO, LE]{\thepage}
#+LATEX_HEADER: \definecolor{bg}{rgb}{0.973, 0.973, 0.973}

#+STYLE: <script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML"> </script>
#+ATTR_HTML: width="500px"
# -*mode: org; -*-
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="https://cdn.globallabs.org/org-html-themes/styles/bigblow/css/htmlize.css"/>
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="https://cdn.globallabs.org/org-html-themes/styles/bigblow/css/bigblow.css"/>
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="https://cdn.globallabs.org/org-html-themes/styles/bigblow/css/hideshow.css"/>
#+HTML_HEAD: <script type="text/javascript" src="https://cdn.globallabs.org/org-html-themes/styles/bigblow/js/jquery-1.11.0.min.js"></script>
#+HTML_HEAD: <script type="text/javascript" src="https://cdn.globallabs.org/org-html-themes/styles/bigblow/js/jquery-ui-1.10.2.min.js"></script>
#+HTML_HEAD: <script type="text/javascript" src="https://cdn.globallabs.org/org-html-themes/styles/bigblow/js/jquery.localscroll-min.js"></script>
#+HTML_HEAD: <script type="text/javascript" src="https://cdn.globallabs.org/org-html-themes/styles/bigblow/js/jquery.scrollTo-1.4.3.1-min.js"></script>
#+HTML_HEAD: <script type="text/javascript" src="https://cdn.globallabs.org/org-html-themes/styles/bigblow/js/jquery.zclip.min.js"></script>
#+HTML_HEAD: <script type="text/javascript" src="https://cdn.globallabs.org/org-html-themes/styles/bigblow/js/bigblow.js"></script>
#+HTML_HEAD: <script type="text/javascript" src="https://cdn.globallabs.org/org-html-themes/styles/bigblow/js/hideshow.js"></script>
#+HTML_HEAD: <script type="text/javascript" src="https://cdn.globallabs.org/org-html-themes/styles/lib/js/jquery.stickytableheaders.min.js"></script>

#+TODO: TODO(t) STARTED(s) WAITING(w) REVISION(r) | DONE(d) CANCELED(c)
#+TAGS: problem(p) task(t) objective(o) general(g) specific(s) hypothesis(h) method(m)

#+begin_abstract
This is the template for the exercises of 100 days of code.
#+end_abstract

* Let's begin!

** Julia code

#+attr_latex: :options framesep=2mm, baselinestretch=1.2, linenos, bgcolor=bg, style=borland
#+begin_src julia :session :results output :exports all
  print("Hello World!")
#+end_src

#+RESULTS:
: Hello World!

** Python code

#+attr_latex: :options framesep=2mm, baselinestretch=1.2, linenos, bgcolor=bg, style=borland
#+begin_src python :session pybabel :results output :exports all
  print('Hello World!')
#+end_src

#+RESULTS:
: import codecs, os;__pyfile = codecs.open('''/var/folders/gs/6nqmf48n4s99p26pnsgp3rr80000gn/T/pyIyKmut''', encoding='''utf-8''');__code = __pyfile.read().encode('''utf-8''');__pyfile.close();os.remove('''/var/folders/gs/6nqmf48n4s99p26pnsgp3rr80000gn/T/pyIyKmut''');exec(compile(__code, '''/var/folders/gs/6nqmf48n4s99p26pnsgp3rr80000gn/T/pyIyKmut''', 'exec'));
: Hello World!

* Printing to the Console

** Instructions

Write a program in ~main.py~ that prints the some notes from the
previous lesson using what you have learnt about the Python print
function.

Warning: The output in your program should match the example output
shown below exactly, character for character, even spaces and symbols
should be identical, otherwise the tests won't pass.

** Example Output

After you have written your code, you should run your program and it
should print the following:

#+begin_example
  Day 1 - Python Print Function
  The function is declared like this:
  print('what to print')
#+end_example

** Julia

#+attr_latex: :options framesep=2mm, baselinestretch=1.2, linenos, bgcolor=bg, style=borland
#+begin_src julia :session :results output :exports all
  print("Day 1 - Julia Print Function\nThe function is declared like this:\nprint('what to print')")
#+end_src

#+RESULTS:
: Day 1 - Julia Print Function
: The function is declared like this:
: print('what to print')

** Python

#+attr_latex: :options framesep=2mm, baselinestretch=1.2, linenos, bgcolor=bg, style=borland
#+begin_src python :session pybabel :results output :exports all
  str = """Day 1 - Python Print Function\nThe function is declared like this:\nprint('what to print')"""
  print(str)
#+end_src

#+RESULTS:
: import codecs, os;__pyfile = codecs.open('''/var/folders/gs/6nqmf48n4s99p26pnsgp3rr80000gn/T/pyliD0tR''', encoding='''utf-8''');__code = __pyfile.read().encode('''utf-8''');__pyfile.close();os.remove('''/var/folders/gs/6nqmf48n4s99p26pnsgp3rr80000gn/T/pyliD0tR''');exec(compile(__code, '''/var/folders/gs/6nqmf48n4s99p26pnsgp3rr80000gn/T/pyliD0tR''', 'exec'));
: Day 1 - Python Print Function
: The function is declared like this:
: print('what to print')

#+attr_latex: :options framesep=2mm, baselinestretch=1.2, linenos, bgcolor=bg, style=borland
#+begin_src python :session pybabel :results output :exports all
  print("Day 1 - Python Print Function\nThe function is declared like this:\nprint('what to print')\n")
#+end_src

#+RESULTS:
: import codecs, os;__pyfile = codecs.open('''/var/folders/gs/6nqmf48n4s99p26pnsgp3rr80000gn/T/pyT365oD''', encoding='''utf-8''');__code = __pyfile.read().encode('''utf-8''');__pyfile.close();os.remove('''/var/folders/gs/6nqmf48n4s99p26pnsgp3rr80000gn/T/pyT365oD''');exec(compile(__code, '''/var/folders/gs/6nqmf48n4s99p26pnsgp3rr80000gn/T/pyT365oD''', 'exec'));
: Day 1 - Python Print Function
: The function is declared like this:
: print('what to print')

e.g. When you hit run, this is what should happen:

Test Your Code

Before checking the solution, try copy-pasting your code into this repl:

https://repl.it/@appbrewery/day-1-1-test-your-code

This repl includes my testing code that will check if your code meets this assignment's objectives.
Solution

https://repl.it/@appbrewery/day-1-1-solution

* Concatenating string

#+attr_latex: :options framesep=2mm, baselinestretch=1.2, linenos, bgcolor=bg, style=borland
#+begin_src julia :session :results output :exports all
  print("Hello" * " " * "Sergio!")
#+end_src

#+RESULTS:
: Hello Sergio!

* Debugging code

** Instructions

Look at the code in the code editor on the left. There are errors in
all of the lines of code. Fix the code so that it runs without
errors.

Warning: The output in your program should match the example output
shown below exactly, character for character, even spaces and symbols
should be identical, otherwise the tests won't pass.

** Example Output

When you run your program, it should print the following:

#+begin_example
  Day 1 - String Manipulation
  String Concatenation is done with the "+" sign.
  e.g. print("Hello " + "world")
  New lines can be created with a backslash and n.
#+end_example

e.g. When you hit run, there should be no errors and this is what should happen:

Test Your Code

Before checking the solution, try copy-pasting your code into this repl:

https://repl.it/@appbrewery/day-1-2-test-your-code

This repl includes my testing code that will check if your code meets this assignment's objectives.
Solution

https://repl.it/@appbrewery/day-1-2-solution

** Julia

#+attr_latex: :options framesep=2mm, baselinestretch=1.2, linenos, bgcolor=bg, style=borland
#+begin_src julia :session :results output :exports all
  print("Day 1 - String Manipulation")
  print("String Concatenation is done with the \"*\" sign.")
  print("e.g. print('Hello " * "world')")
  print("New lines can be created with a backslash and n.")
#+end_src

#+RESULTS:
: Day 1 - String Manipulation
: String Concatenation is done with the "*" sign.
: e.g. print('Hello world')
: New lines can be created with a backslash and n.

** Python

#+attr_latex: :options framesep=2mm, baselinestretch=1.2, linenos, bgcolor=bg, style=borland
#+begin_src python :session pybabel :results output :exports all
  print("Day 1 - String Manipulation")
  print('String Concatenation is done with the "+" sign.')
  print('e.g. print("Hello " + "world")')
  print("New lines can be created with a backslash and n.")
#+end_src

#+RESULTS:
: import codecs, os;__pyfile = codecs.open('''/var/folders/gs/6nqmf48n4s99p26pnsgp3rr80000gn/T/pyM23ESR''', encoding='''utf-8''');__code = __pyfile.read().encode('''utf-8''');__pyfile.close();os.remove('''/var/folders/gs/6nqmf48n4s99p26pnsgp3rr80000gn/T/pyM23ESR''');exec(compile(__code, '''/var/folders/gs/6nqmf48n4s99p26pnsgp3rr80000gn/T/pyM23ESR''', 'exec'));
: Day 1 - String Manipulation
: String Concatenation is done with the "+" sign.
: e.g. print("Hello " + "world")
: New lines can be created with a backslash and n.



bibliographystyle:newapa
bibliography:code.bib
